title: "Authentication API Test"
description: "Test the authentication endpoints and user management"
branches:
  - id: "setup-database"
    title: "Database setup"
    type: "given"
    description: "Prepare test database and data"
    branches:
      - id: "clean-database"
        title: "Database is clean"
        type: "given"
        description: "Clear all test data"
      - id: "test-user"
        title: "Test user exists"
        type: "given"
        description: "Create a test user account"
  
  - id: "login-api"
    title: "Login API testing"
    type: "when"
    description: "Test login endpoint"
    branches:
      - id: "valid-credentials"
        title: "Valid credentials provided"
        type: "when"
        description: "Send login request with valid data"
        branches:
          - id: "correct-email"
            title: "Email is correct"
            type: "when"
            description: "Use valid email format"
          - id: "correct-password"
            title: "Password is correct"
            type: "when"
            description: "Use valid password"
      - id: "invalid-credentials"
        title: "Invalid credentials provided"
        type: "when"
        description: "Send login request with invalid data"
        branches:
          - id: "wrong-email"
            title: "Email is incorrect"
            type: "when"
            description: "Use non-existent email"
          - id: "wrong-password"
            title: "Password is incorrect"
            type: "when"
            description: "Use wrong password"
  
  - id: "response-validation"
    title: "Validate API responses"
    type: "then"
    description: "Check response status and data"
    branches:
      - id: "success-response"
        title: "Success response for valid login"
        type: "then"
        description: "Verify 200 status and token"
        branches:
          - id: "status-200"
            title: "HTTP status is 200"
            type: "then"
            description: "Check response status code"
          - id: "token-present"
            title: "JWT token is present"
            type: "then"
            description: "Verify token in response"
          - id: "user-data"
            title: "User data is returned"
            type: "then"
            description: "Check user information"
      - id: "error-response"
        title: "Error response for invalid login"
        type: "then"
        description: "Verify 401 status and error message"
        branches:
          - id: "status-401"
            title: "HTTP status is 401"
            type: "then"
            description: "Check unauthorized status"
          - id: "error-message"
            title: "Error message is clear"
            type: "then"
            description: "Verify error description" 